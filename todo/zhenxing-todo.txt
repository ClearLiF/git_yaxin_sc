2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式2020-7-31
分享的思路：
1.git的介绍，什么叫分布式，gitlab的区别，svn,cvs
stage
2.使用场景：branch,fetch,pull,push,merge,reset,rebase,add,tag,release,
3.原理：如何做到分布式的
4.要求：
5.重构模块
6.熟悉规范:命名、书写方式
